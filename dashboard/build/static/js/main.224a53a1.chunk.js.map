{"version":3,"sources":["pages/Devices/DeviceModal.js","pages/Devices/index.js","pages/Settings/NetworkModal.js","pages/Settings/index.js","App.js","index.js"],"names":["DeviceModal","networks","editingDevice","setEditingDevice","setDevices","useState","deviceState","setDeviceState","updateState","setUpdateState","update","useCallback","del","fetch","method","body","JSON","stringify","id","headers","then","r","json","data","title","icon","onClose","className","width","type","value","name","onChange","e","target","items","Object","keys","map","networkID","onClick","network","right","mac","Devices","devices","wakeState","setWakeState","wakeDevice","deviceID","length","lastWoken","Date","toLocaleString","NetworkModal","editingNetwork","setEditingNetwork","setNetworks","networkState","setNetworkState","dns","secret","Settings","theme","useContext","themeContext","active","App","history","useHistory","location","useLocation","useEffect","navbar","logo","canRecess","pathname","push","accountName","window","host","accountDropdown","open","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.224a53a1.chunk.js","sourcesContent":["import Modal from \"shamrock-ux/react/Modal\";\r\nimport InputBox from \"shamrock-ux/react/InputBox\";\r\nimport Button from \"shamrock-ux/react/Button\";\r\nimport Dropdown from \"shamrock-ux/react/Dropdown\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nexport default function DeviceModal({ networks, editingDevice, setEditingDevice, setDevices }) {\r\n    const [deviceState, setDeviceState] = useState(editingDevice);\r\n\r\n    const [updateState, setUpdateState] = useState(false);\r\n    const update = useCallback((del = false) => {\r\n        if (del) {\r\n            //Delete device\r\n            setUpdateState(\"deleting\");\r\n            fetch(\"/api/devices\", {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({ id: deviceState.id }),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then(r => r.json()).then(data => {\r\n                setEditingDevice(false);\r\n                setDevices(data);\r\n            });\r\n        } else {\r\n            //Save device\r\n            setUpdateState(\"saving\");\r\n            fetch(\"/api/devices\", {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(deviceState),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then(r => r.json()).then(data => {\r\n                setEditingDevice(false);\r\n                setDevices(data);\r\n            });\r\n        }\r\n    }, [setUpdateState, deviceState, setDevices, setEditingDevice]);\r\n\r\n    return (\r\n        <Modal title={editingDevice.id ? \"Edit Device\" : \"Add Device\"} icon=\"computer\" onClose={() => setEditingDevice(null)}>\r\n            <div className=\"space-y-5\">\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">Device name</p>\r\n                    <InputBox width={400} type=\"text\" icon=\"drive_file_rename_outline\" value={deviceState.name} onChange={(e) => setDeviceState({ ...deviceState, name: e.target.value })} />\r\n                </div>\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">Network</p>\r\n                    <Dropdown items={Object.keys(networks).map(networkID => ({\r\n                        name: networks[networkID].name,\r\n                        icon: \"public\",\r\n                        onClick: () => setDeviceState({ ...deviceState, network: networks[networkID].id })\r\n                    }))}>\r\n                        <Button right type=\"outline\" icon=\"arrow_drop_down\">{deviceState.network ? (networks[deviceState.network]?.name || \"(deleted)\") : \"Select a network\"}</Button>\r\n                    </Dropdown>\r\n                </div>\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">MAC Address</p>\r\n                    <InputBox width={400} type=\"text\" icon=\"router\" value={deviceState.mac} onChange={(e) => setDeviceState({ ...deviceState, mac: e.target.value })} />\r\n                </div>\r\n                <div className=\"mt-20 flex flex-row justify-between items-center\">\r\n                    <div className=\"space-x-2\">\r\n                        <Button type=\"primary\" icon=\"save\" onClick={() => update()}>{updateState == \"saving\" ? \"Saving...\" : \"Save\"}</Button>\r\n                        <Button icon=\"close\" onClick={() => setEditingDevice(null)}>Cancel</Button>\r\n                    </div>\r\n                    {editingDevice.id && <Button type=\"outline\" icon=\"delete\" onClick={() => update(true)}>{updateState == \"deleting\" ? \"Deleting...\" : \"Delete\"}</Button>}\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import { useCallback, useState } from \"react\";\r\n\r\nimport Container from \"shamrock-ux/react/Container\";\r\nimport Button from \"shamrock-ux/react/Button\";\r\n\r\nimport DeviceModal from \"./DeviceModal\";\r\n\r\nexport default function Devices({ networks, devices, setDevices }) {\r\n    const [editingDevice, setEditingDevice] = useState(null);\r\n\r\n    //Handle wake requests\r\n    const [wakeState, setWakeState] = useState(null);\r\n    const wakeDevice = useCallback((deviceID) => {\r\n        setWakeState(deviceID);\r\n\r\n        fetch(\"/api/devices/wake\", {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({ id: deviceID }),\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).then(r => r.json()).then(data => {\r\n            setWakeState(null);\r\n            setDevices(data);\r\n        });\r\n    }, [setWakeState, setDevices]);\r\n\r\n    return (\r\n        <Container>\r\n            {editingDevice && <DeviceModal networks={networks} editingDevice={editingDevice} setEditingDevice={setEditingDevice} setDevices={setDevices} />}\r\n\r\n            <div className=\"mt-12 space-y-12\">\r\n                <div>\r\n                    <h1 className=\"text-4xl font-bold\">Devices</h1>\r\n                    {\r\n                        ((networks !== null) && (Object.keys(networks).length !== 0)) && (\r\n                            <div className=\"mt-4\">\r\n                                <Button onClick={() => setEditingDevice({})} icon=\"add\">Add</Button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"mt-10\">\r\n                    {\r\n                        (devices == null) || (networks == null) ? (\r\n                            <h5 className=\"text-lg font-medium\">Loading configured devices and networks...</h5>\r\n                        ) : (Object.keys(devices).length == 0) && (Object.keys(networks).length == 0) ? (\r\n                            <h5 className=\"text-lg font-medium\">You haven't configured any networks yet. Add a network in the Settings tab first, then return here to begin adding devices.</h5>\r\n                        ) : (Object.keys(devices).length == 0) && (Object.keys(networks).length !== 0) ? (\r\n                            <h5 className=\"text-lg font-medium\">You haven't configured any devices yet</h5>\r\n                        ) : (\r\n                            <table className=\"w-full\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"text-lg font-semibold text-left\">Name</th>\r\n                                        <th className=\"text-lg font-semibold text-left\">Last woken</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(devices).map(deviceID => (\r\n                                        <tr>\r\n                                            <td className=\"text-lg font-medium\">\r\n                                                {devices[deviceID].name}\r\n                                            </td>\r\n                                            <td className=\"text-lg\">\r\n                                                {devices[deviceID].lastWoken ? new Date(devices[deviceID].lastWoken).toLocaleString() : \"Never\"}\r\n                                            </td>\r\n                                            <td className=\"py-2 space-x-2 text-right\">\r\n                                                <Button type=\"primary\" onClick={() => wakeDevice(deviceID)} icon=\"power_settings_new\">{wakeState == deviceID ? \"Waking up...\" : \"Wake up\"}</Button>\r\n                                                <Button onClick={() => setEditingDevice(devices[deviceID])} icon=\"edit\">Edit</Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import Modal from \"shamrock-ux/react/Modal\";\r\nimport InputBox from \"shamrock-ux/react/InputBox\";\r\nimport Button from \"shamrock-ux/react/Button\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nexport default function NetworkModal({ editingNetwork, setEditingNetwork, setNetworks }) {\r\n    const [networkState, setNetworkState] = useState(editingNetwork);\r\n\r\n    const [updateState, setUpdateState] = useState(false);\r\n    const update = useCallback((del = false) => {\r\n        if (del) {\r\n            //Delete network\r\n            setUpdateState(\"deleting\");\r\n            fetch(\"/api/networks\", {\r\n                method: \"DELETE\",\r\n                body: JSON.stringify({ id: networkState.id }),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then(r => r.json()).then(data => {\r\n                setEditingNetwork(false);\r\n                setNetworks(data);\r\n            });\r\n        } else {\r\n            //Save network\r\n            setUpdateState(\"saving\");\r\n            fetch(\"/api/networks\", {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(networkState),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then(r => r.json()).then(data => {\r\n                setEditingNetwork(false);\r\n                setNetworks(data);\r\n            });\r\n        }\r\n    }, [setUpdateState, networkState, setNetworks, setEditingNetwork]);\r\n\r\n    return (\r\n        <Modal title={editingNetwork.id ? \"Edit Network\" : \"Add Network\"} icon=\"public\" onClose={() => setEditingNetwork(null)}>\r\n            <div className=\"space-y-5\">\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">Network name</p>\r\n                    <InputBox width={400} type=\"text\" icon=\"drive_file_rename_outline\" value={networkState.name} onChange={(e) => setNetworkState({ ...networkState, name: e.target.value })} />\r\n                </div>\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">DNS route</p>\r\n                    <InputBox width={400} type=\"text\" icon=\"dns\" value={networkState.dns} onChange={(e) => setNetworkState({ ...networkState, dns: e.target.value })} />\r\n                </div>\r\n                <div>\r\n                    <p className=\"mb-1 font-medium\">{editingNetwork.id ? \"Secret (leave blank to keep existing)\" : \"Controller secret\"}</p>\r\n                    <InputBox width={400} type=\"password\" icon=\"key\" value={networkState.secret} onChange={(e) => setNetworkState({ ...networkState, secret: e.target.value })} />\r\n                </div>\r\n                <div className=\"mt-20 flex flex-row justify-between items-center\">\r\n                    <div className=\"space-x-2\">\r\n                        <Button type=\"primary\" icon=\"save\" onClick={() => update()}>{updateState == \"saving\" ? \"Saving...\" : \"Save\"}</Button>\r\n                        <Button icon=\"close\" onClick={() => setEditingNetwork(null)}>Cancel</Button>\r\n                    </div>\r\n                    {editingNetwork.id && <Button icon=\"delete\" onClick={() => update(true)}>{updateState == \"deleting\" ? \"Deleting...\" : \"Delete\"}</Button>}\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import { useContext, useState } from \"react\";\r\n\r\nimport Container from \"shamrock-ux/react/Container\";\r\nimport ButtonGroup from \"shamrock-ux/react/ButtonGroup\";\r\nimport themeContext from \"shamrock-ux/react/contexts/theme\";\r\nimport Button from \"shamrock-ux/react/Button\";\r\n\r\nimport NetworkModal from \"./NetworkModal\";\r\n\r\nexport default function Settings({ networks, setNetworks }) {\r\n    const theme = useContext(themeContext);\r\n    const [editingNetwork, setEditingNetwork] = useState(null);\r\n\r\n    return (\r\n        <Container>\r\n            {editingNetwork && <NetworkModal editingNetwork={editingNetwork} setEditingNetwork={setEditingNetwork} setNetworks={setNetworks} />}\r\n\r\n            <div className=\"mt-12 space-y-12\">\r\n                <div>\r\n                    <h1 className=\"text-4xl font-bold\">Settings</h1>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2 className=\"text-3xl font-semibold\">Theme</h2>\r\n                    <div className=\"mt-4\">\r\n                        <ButtonGroup items={[\r\n                            { name: \"System\", icon: \"computer\", active: theme.id == \"system\", onClick: () => theme.update(\"system\") },\r\n                            { name: \"Light\", icon: \"light_mode\", active: theme.id == \"light\", onClick: () => theme.update(\"light\") },\r\n                            { name: \"Dark\", icon: \"dark_mode\", active: theme.id == \"dark\", onClick: () => theme.update(\"dark\") }\r\n                        ]} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2 className=\"text-3xl font-semibold\">Networks</h2>\r\n                    <div className=\"mt-4\">\r\n                        <Button onClick={() => setEditingNetwork({})} icon=\"add\">Add</Button>\r\n                    </div>\r\n                    <div className=\"mt-10\">\r\n                        {\r\n                            networks == null ? (\r\n                                <h5 className=\"text-lg font-medium\">Loading configured networks...</h5>\r\n                            ) : Object.keys(networks).length == 0 ? (\r\n                                <h5 className=\"text-lg font-medium\">You haven't added any networks yet</h5>\r\n                            ) : (\r\n                                <table className=\"w-full\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"text-lg font-semibold text-left\">Name</th>\r\n                                            <th className=\"text-lg font-semibold text-left\">DNS route</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Object.keys(networks).map(networkID => (\r\n                                            <tr>\r\n                                                <td className=\"text-lg font-medium\">\r\n                                                    {networks[networkID].name}\r\n                                                </td>\r\n                                                <td className=\"text-lg\">\r\n                                                    {networks[networkID].dns}\r\n                                                </td>\r\n                                                <td className=\"py-2 text-right\">\r\n                                                    <Button onClick={() => setEditingNetwork(networks[networkID])} icon=\"edit\">Edit</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\n\nimport NavigationController from \"shamrock-ux/react/NavigationController\";\nimport Container from \"shamrock-ux/react/Container\";\n\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useHistory\n} from \"react-router-dom\";\n\nimport Devices from \"./pages/Devices\";\nimport Settings from \"./pages/Settings\";\n\nimport './App.css';\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n\n  //Get and store devices data state\n  const [devices, setDevices] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/devices\").then(r => r.json()).then(data => {\n      setDevices(data);\n    });\n  }, []);\n\n  //Get and store networks data state\n  const [networks, setNetworks] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/networks\").then(r => r.json()).then(data => {\n      setNetworks(data);\n    });\n  }, []);\n\n  return (\n    <NavigationController\n      navbar={{\n        title: \"Wake Anywhere\",\n        logo: \"/icon.svg\",\n        canRecess: true,\n        items: [\n          { name: \"Devices\", icon: \"computer\", active: location.pathname == \"/\", onClick: () => history.push(\"/\") },\n          { name: \"Settings\", icon: \"settings\", active: location.pathname == \"/settings\", onClick: () => history.push(\"/settings\") }\n        ],\n        accountName: (window.location.host == \"demo.wakeanywhere.com\") && \"Demo (read-only)\",\n        accountDropdown: (window.location.host == \"demo.wakeanywhere.com\") && [\n          { name: \"Source Code\", icon: \"code\", onClick: () => window.open(\"https://github.com/jottocraft/wake-anywhere\") },\n          { name: \"Documentation\", icon: \"article\", onClick: () => window.open(\"https://github.com/jottocraft/wake-anywhere#readme\") },\n          { name: \"hello@jottocraft.com\", icon: \"email\", onClick: () => window.open(\"mailto:hello@jottocraft.com\") }\n        ]\n      }}\n    >\n      <Switch>\n        <Route path=\"/settings\">\n          <Settings networks={networks} setNetworks={setNetworks} />\n        </Route>\n        <Route exact path=\"/\">\n          <Devices networks={networks} devices={devices} setDevices={setDevices} />\n        </Route>\n        <Route path=\"*\">\n          <Container>\n            <div className=\"mt-12\">\n              <h1 className=\"text-4xl font-bold\">404</h1>\n              <h5 className=\"text-2xl font-medium\">The requested URL was not found</h5>\n            </div>\n          </Container>\n        </Route>\n      </Switch>\n    </NavigationController>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Root from \"shamrock-ux/react/Root\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Root>\n        <App />\n      </Root>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}